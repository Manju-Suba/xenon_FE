{"version":3,"file":"static/js/954.19ae34a6.chunk.js","mappings":"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","sources":["redux/sales/action.js","views/pages/modal/ImportModal.js","views/pages/SalesHierarchy.js","views/pages/Target.js","views/pages/RSwiseTarget.js","views/pages/Historylog.js","views/pages/login/ChangePassword.js","routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","components/header/AppHeaderDropdown.js","assets/brand/logo.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import {\n  FETCH_SH,\n  FETCH_RS,\n  FETCH_TARGET,\n  FETCH_CLUSTERS,\n  FETCH_STATE,\n  FETCH_HISTORY,\n  FETCH_TS_EXCEL,\n} from '../actiontype'\nimport axiosInstance from '../../constants/Global'\nimport { ROLE_LIST } from '../../constants/constants'\n\nexport const SalesHierarchyImport = (formData, tabhead) => {\n  return async (dispatch) => {\n    try {\n      let url\n      if (tabhead === 'Sales') {\n        url = `/sales-hierarchy/excel-upload`\n      } else if (tabhead === 'Target') {\n        url = `/salesman-target/excel-upload`\n      } else {\n        url = `/rs-target/excel-upload`\n      }\n      const response = await axiosInstance.post(url, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n\n      return response\n    } catch (error) {\n      console.error('Error while uploading file:', error)\n      throw error\n    }\n  }\n}\n\nexport const getAllSHDetails = (page, pageSize, cluster, state, role) => {\n  let url\n  if (role === ROLE_LIST.CLUSTERS) {\n    url = `/sales-hierarchy/fetch-all?page=${page}&size=${pageSize}`\n  } else {\n    url = `/sales-hierarchy/ctmo-fetch-all?page=${page}&size=${pageSize}`\n    if (cluster === 'All' && state === 'All' && cluster === '' && state === '') {\n      url += ''\n    } else if (cluster !== 'All' && state !== 'All' && cluster !== '' && state !== '') {\n      url += `&cluster=${cluster}&state=${state}`\n    } else if (cluster === 'All' && state !== 'All' && cluster === '' && state !== '') {\n      url += `&state=${state}`\n    } else if (cluster !== 'All' && state === 'All' && cluster !== '' && state !== '') {\n      url += `&cluster=${cluster}`\n    } else {\n      url += ``\n    }\n  }\n  return (dispatch) => {\n    axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCH_SH,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n}\n\nexport const getAllRSDetails = (page, pageSize, cluster, state, role) => {\n  let url\n  if (role === ROLE_LIST.CLUSTERS) {\n    url = `/rs-target/fetch-all?page=${page}&size=${pageSize}`\n  } else {\n    url = `/rs-target/ctmo-fetch-all?page=${page}&size=${pageSize}`\n    if (cluster === 'All' && state === 'All' && cluster === '' && state === '') {\n      url += ''\n    } else if (cluster !== 'All' && state !== 'All' && cluster !== '' && state !== '') {\n      url += `&cluster=${cluster}&state=${state}`\n    } else if (cluster === 'All' && state !== 'All' && cluster === '' && state !== '') {\n      url += `&state=${state}`\n    } else if (cluster !== 'All' && state === 'All' && cluster !== '' && state !== '') {\n      url += `&cluster=${cluster}`\n    } else {\n      url += ``\n    }\n  }\n  return (dispatch) => {\n    axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCH_RS,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n}\n\nexport const getAllTargetDetails = (page, pageSize, cluster, state, role) => {\n  let url\n  if (role === ROLE_LIST.CLUSTERS) {\n    url = `/salesman-target/fetch-all?page=${page}&size=${pageSize}`\n  } else {\n    url = `/salesman-target/ctmo-fetch-all?page=${page}&size=${pageSize}`\n    if (cluster === 'All' && state === 'All' && cluster === '' && state === '') {\n      url += ''\n    } else if (cluster !== 'All' && state !== 'All' && cluster !== '' && state !== '') {\n      url += `&cluster=${cluster}&state=${state}`\n    } else if (cluster === 'All' && state !== 'All' && cluster === '' && state !== '') {\n      url += `&state=${state}`\n    } else if (cluster !== 'All' && state === 'All' && cluster !== '' && state !== '') {\n      url += `&cluster=${cluster}`\n    } else {\n      url += ``\n    }\n  }\n  return (dispatch) => {\n    axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCH_TARGET,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n}\n\nexport const getAllClusterDetails = () => {\n  let url = `/common/fetch-cluster`\n\n  return (dispatch) => {\n    axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCH_CLUSTERS,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n}\n\nexport const getAllStateDetails = (cluster) => {\n  let url = `/common/fetch-state-by-cluster?cluster=${cluster}`\n\n  return (dispatch) => {\n    axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCH_STATE,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n}\n\nexport const getAllHistoryDetails = (page, pageSize) => {\n  let url = `/common/fetchall-excel-history?page=${page}&size=${pageSize}`\n\n  return (dispatch) => {\n    axiosInstance\n      .get(url, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .then((res) => {\n        dispatch({\n          type: FETCH_HISTORY,\n          payload: res.data.data,\n        })\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n}\n\nexport const getExcelByClusterDetails = (cluster, Ftype) => {\n  let url = `/common/ctmo-cluster-wise-download?cluster=${cluster}&excelType=${Ftype}`\n\n  return async (dispatch) => {\n    const response = await axiosInstance.get(url, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    return response\n  }\n}\n\nexport const getExcelTSCluster = () => {\n  let url = `/salesman-target/download/sales-target`\n\n  return async (dispatch) => {\n    const response = await axiosInstance.get(url, {\n      responseType: 'blob',\n    })\n    return response\n  }\n}\n\nexport const updatePassword = (formData) => {\n  let url = `/common/change-password`\n  return async (dispatch) => {\n    const response = await axiosInstance.post(url, formData, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n    return response\n  }\n}\n","import React from 'react'\nimport {\n  CButton,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormLabel,\n  CModal,\n  CModalBody,\n  CModalHeader,\n  CModalTitle,\n} from '@coreui/react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\nimport {\n  SalesHierarchyImport,\n  getAllRSDetails,\n  getAllSHDetails,\n  getAllTargetDetails,\n} from 'src/redux/sales/action'\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useCookies } from 'react-cookie'\nimport { ROLE_LIST } from 'src/constants/constants'\n\nconst ImportModal = ({ visible, setVisible, tabhead, clusterData }) => {\n  const dispatch = useDispatch()\n  const [cookies] = useCookies(['role'])\n  const [show, setShow] = React.useState(false)\n  const [dragActive, setDragActive] = React.useState(false)\n  const inputRef = React.useRef(null)\n  const [selectedFile, setSelectedFile] = React.useState(null)\n  const [selectedinputFile, setSelectedinputFile] = React.useState(null)\n  const [error, setError] = React.useState(null)\n  const [loading, setLoading] = React.useState(false)\n  const [validated, setValidated] = React.useState(false)\n\n  // handle drag events\n  const handleDrag = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (e.type === 'dragenter' || e.type === 'dragover') {\n      setDragActive(true)\n    } else if (e.type === 'dragleave') {\n      setDragActive(false)\n    }\n  }\n\n  // triggers when file is dropped\n  const handleDrop = (e) => {\n    e.preventDefault()\n    e.stopPropagation()\n    setDragActive(false)\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      const file = e.dataTransfer.files[0]\n      if (\n        file.type === 'application/vnd.ms-excel' ||\n        file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      ) {\n        setSelectedFile(file)\n        setSelectedinputFile(e.dataTransfer.files[0])\n        setError(null)\n      } else {\n        setError('Please upload an Excel file.')\n      }\n    }\n  }\n\n  // triggers when file is selected with click\n  const handleChange = (e) => {\n    e.preventDefault()\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0]\n      if (\n        file.type === 'application/vnd.ms-excel' ||\n        file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      ) {\n        setSelectedFile(file)\n        setSelectedinputFile(file) // Corrected line to use e.target.files[0]\n        setError(null)\n      } else {\n        setError('Please upload an Excel file.')\n      }\n    }\n  }\n\n  // triggers the input when the button is clicked\n  React.useEffect(() => {\n    setShow(visible)\n  }, [visible])\n\n  const handleClose = () => {\n    setVisible(false)\n    setShow(false)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const form = e.currentTarget\n    if (form.checkValidity() === false) {\n      e.stopPropagation()\n    } else {\n      setLoading(true)\n      setError('')\n      if (cookies.role === ROLE_LIST.CDMO) {\n        if (clusterData === 'All') {\n          setError('Must select Cluster')\n          setLoading(false)\n          return false\n        }\n      }\n      const formData = new FormData()\n      formData.append('file', selectedinputFile)\n      formData.append('cluster', clusterData)\n\n      try {\n        await dispatch(SalesHierarchyImport(formData, tabhead))\n          .then((response) => {\n            if (tabhead === 'Sales') {\n              dispatch(getAllSHDetails())\n            } else if (tabhead === 'RSwiseTarget') {\n              dispatch(getAllRSDetails())\n            } else if (tabhead === 'Target') {\n              dispatch(getAllTargetDetails())\n            }\n\n            toast.success(response.data.message)\n            setLoading(false)\n            setSelectedFile()\n            setSelectedinputFile()\n          })\n          .catch((error) => {\n            toast.error(error.response.data.message)\n            setLoading(false)\n          })\n      } catch (err) {\n        console.log(err)\n        setError('File upload failed. Please try again.')\n      } finally {\n        setLoading(false)\n      }\n    }\n    setValidated(true)\n  }\n\n  const handleLabelClick = (e) => {\n    e.preventDefault()\n    if (inputRef.current) {\n      inputRef.current.click()\n    }\n  }\n\n  return (\n    <CModal\n      alignment=\"center\"\n      visible={show}\n      onClose={handleClose}\n      aria-labelledby=\"VerticallyCenteredExample\"\n    >\n      <ToastContainer />\n      <CModalHeader>\n        <CModalTitle id=\"VerticallyCenteredExample\">Import Excel</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <CForm\n          className=\"row g-3 needs-validation\"\n          noValidate\n          validated={validated}\n          onSubmit={handleSubmit}\n        >\n          <CCol md={12} className=\"position-relative\">\n            <CFormInput\n              type=\"file\"\n              id=\"input-file-upload\"\n              multiple={false}\n              accept=\".xls, .xlsx\"\n              onChange={handleChange}\n              ref={inputRef}\n              style={{ display: 'none' }}\n              required\n            />\n            <CFormLabel\n              id=\"label-file-upload\"\n              htmlFor=\"input-file-upload\"\n              className={dragActive ? 'drag-active' : ''}\n              onClick={handleLabelClick}\n              onDragEnter={handleDrag}\n              onDragOver={handleDrag}\n              onDragLeave={handleDrag}\n              onDrop={handleDrop}\n              style={{\n                border: '2px dashed #aaa',\n                padding: '20px',\n                textAlign: 'center',\n                cursor: 'pointer',\n                width: '100%',\n              }}\n            >\n              <div>\n                <p>Drag and drop your file here or</p>\n                <p>Upload a file</p>\n                {selectedFile && <p>{selectedFile.name}</p>}\n              </div>\n            </CFormLabel>\n            {dragActive && (\n              <div\n                id=\"drag-file-element\"\n                onDragEnter={handleDrag}\n                onDragLeave={handleDrag}\n                onDragOver={handleDrag}\n                onDrop={handleDrop}\n                style={{\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  width: '100%',\n                  height: '100%',\n                  zIndex: 10,\n                  backgroundColor: 'rgba(0,0,0,0.1)',\n                }}\n              ></div>\n            )}\n            {error && <p className=\"text-danger\">{error}</p>}\n          </CCol>\n          <CCol xs={12} className=\"position-relative text-lg-end\">\n            <CButton color=\"success\" type=\"submit\" disabled={loading}>\n              {loading ? 'Uploading...' : 'Import'}\n            </CButton>\n          </CCol>\n        </CForm>\n      </CModalBody>\n    </CModal>\n  )\n}\n\nImportModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  setVisible: PropTypes.func.isRequired,\n  tabhead: PropTypes.string.isRequired,\n  clusterData: PropTypes.string,\n}\n\nexport default ImportModal\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CFormSelect, CRow } from '@coreui/react'\nimport ImportModal from './modal/ImportModal'\nimport { Table } from 'antd'\nimport salesh from '../../assets/sample/SalesHierarchyTarget.xlsx'\nimport {\n  getAllSHDetails,\n  getAllClusterDetails,\n  getAllStateDetails,\n  getExcelByClusterDetails,\n} from '../../redux/sales/action'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useCookies } from 'react-cookie'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload, cilCloudUpload } from '@coreui/icons'\nimport { ROLE_LIST, UPLOAD_URL } from 'src/constants/constants'\nimport { toast, ToastContainer } from 'react-toastify'\nimport debounce from 'lodash.debounce'\n\nconst SalesHierarchy = () => {\n  const dispatch = useDispatch()\n  const [shdata, setData] = useState([])\n  const hasMoreRef = useRef(true)\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const clusterRef = useRef('All')\n\n  const [cookies] = useCookies(['role'])\n  const [visible, setVisible] = useState(false)\n  const SalesHierarchy = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.saleHData,\n  )\n  const clusterData = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.ClustersData,\n  )\n  const stateData = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.StateData,\n  )\n\n  const [cluster, setCluster] = useState('All')\n  const [stateName, setSateName] = useState('All')\n  const [loading, setLoading] = useState(false)\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'sno',\n      key: 'sno',\n    },\n    {\n      title: 'SMCode',\n      dataIndex: 'smCode',\n      key: 'smCode',\n    },\n    {\n      title: 'SMSysName',\n      dataIndex: 'smSysName',\n      key: 'smSysName',\n    },\n    {\n      title: 'ZM',\n      dataIndex: 'zm',\n      key: 'zm',\n    },\n    {\n      title: 'ZM ID',\n      dataIndex: 'zmId',\n      key: 'zmId',\n    },\n    {\n      title: 'AMName',\n      dataIndex: 'amName',\n      key: 'amName',\n    },\n    {\n      title: 'AM ID',\n      dataIndex: 'amId',\n      key: 'amId',\n    },\n    {\n      title: 'TSOName',\n      dataIndex: 'tsoName',\n      key: 'tsoName',\n    },\n    {\n      title: 'TSO ID',\n      dataIndex: 'tsoId',\n      key: 'tsoId',\n    },\n  ]\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current // Calculate the start index based on the page number\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1, // Generating serial number with the correct offset\n    }))\n  }\n\n  useEffect(() => {\n    if (SalesHierarchy && SalesHierarchy.length > 0) {\n      const dataWithSerialNumbers = addSerialNumbers(SalesHierarchy)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    } else {\n      hasMoreRef.current = false\n    }\n    setLoading(false)\n  }, [SalesHierarchy])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getAllSHDetails(pageRef.current, sizeRef.current, clusterRef.current, stateName, role),\n      )\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.ctmo-sales-hierarchy .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  const [isImportButtonEnabled, setIsImportButtonEnabled] = useState(false)\n  const role = cookies.role.replace(/[^A-Za-z]/g, '')\n\n  useEffect(() => {\n    setLoading(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n\n    dispatch(getAllClusterDetails())\n    dispatch(getAllSHDetails(pageRef.current, sizeRef.current, clusterRef.current, stateName, role))\n    const checkDay = () => {\n      const today = new Date()\n      const dayOfWeek = today.getDay() // getDay() returns 0 for Sunday, 1 for Monday, and so on\n\n      if (dayOfWeek === 1) {\n        // 1 means Monday\n        setIsImportButtonEnabled(true)\n      } else {\n        setIsImportButtonEnabled(false)\n      }\n    }\n\n    checkDay()\n  }, [dispatch, role])\n\n  const handleDownload = () => {\n    const link = document.createElement('a')\n    link.href = salesh\n    link.download = 'SalesHierarchyTarget.xlsx'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  //  onchange getCluster\n  const getCluster = async (e) => {\n    setLoading(true)\n    setCluster(e.target.value)\n    clusterRef.current = e.target.value\n    dispatch(getAllStateDetails(e.target.value))\n    dispatch(getExcelByClusterDetails())\n\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n    dispatch(getAllSHDetails(pageRef.current, sizeRef.current, e.target.value, stateName, role))\n    setLoading(false)\n  }\n\n  const handleDownloadCS = async () => {\n    try {\n      await dispatch(getExcelByClusterDetails(cluster, 'sales_hierarchy'))\n        .then((response) => {\n          if (response.data.status === true) {\n            if (response.data.data.length > 0) {\n              const excelUrl = UPLOAD_URL + response.data.data[0].excelName\n              downloadExcel(excelUrl)\n            } else {\n              toast.error('No updated Excel')\n            }\n          } else {\n            toast.error('No updated Excel')\n          }\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } catch (err) {\n      console.error(err)\n    } finally {\n      setLoading(false) // Hide loading indicator if needed\n    }\n  }\n\n  const downloadExcel = (url) => {\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', 'SalesHierarchyTarget.xlsx') // Optional: specify a file name\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  const getStateCluster = (e) => {\n    setLoading(true)\n    setSateName(e.target.value)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n    dispatch(\n      getAllSHDetails(pageRef.current, sizeRef.current, clusterRef.current, e.target.value, role),\n    )\n    setLoading(false)\n  }\n\n  return (\n    <CRow>\n      <ToastContainer />\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Sales Hierarchy</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CRow className=\"mb-2\">\n              <CCol>\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CFormSelect aria-label=\"Choose Cluster\" onChange={getCluster}>\n                    <option value=\"All\">Choose Cluster</option>\n                    {Array.isArray(clusterData) &&\n                      clusterData.map((cluster, index) => (\n                        <option key={index} value={cluster}>\n                          {cluster}\n                        </option>\n                      ))}\n                  </CFormSelect>\n                )}\n              </CCol>\n              <CCol>\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CFormSelect aria-label=\"Choose State\" onChange={getStateCluster}>\n                    <option value=\"All\">Choose State</option>\n                    {Array.isArray(stateData) &&\n                      stateData.map((state, index) => (\n                        <option key={index} value={state}>\n                          {state}\n                        </option>\n                      ))}\n                  </CFormSelect>\n                )}\n              </CCol>\n              <CCol className=\"d-flex justify-content-end\">\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"me-3\"\n                    onClick={handleDownloadCS}\n                  >\n                    <CIcon icon={cilCloudDownload} className=\"me-2\" title=\"Download file\" />\n                    Download Excel\n                  </CButton>\n                )}\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CLUSTERS && (\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"me-3\"\n                    onClick={handleDownload}\n                  >\n                    <CIcon icon={cilCloudDownload} className=\"me-2\" title=\"Download file\" />\n                    Download Excel\n                  </CButton>\n                )}\n                {!isImportButtonEnabled && (\n                  <CButton\n                    color=\"success\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setVisible(true)}\n                  >\n                    <CIcon icon={cilCloudUpload} className=\"me-2\" title=\"Download file\" /> Import\n                  </CButton>\n                )}\n              </CCol>\n            </CRow>\n            {/* <CTable columns={columns} items={items} /> */}\n            <div className=\"ctmo-sales-hierarchy\">\n              <style>{`\n                .ant-table-body {\n                  scrollbar-width: thin;\n                }\n              `}</style>\n              <Table\n                columns={columns}\n                dataSource={shdata}\n                pagination={false}\n                scroll={{ y: 250 }}\n                // rowKey=\"id\"\n                loading={loading}\n              />\n            </div>\n            {visible ? (\n              <ImportModal\n                visible={visible}\n                setVisible={setVisible}\n                clusterData={cluster}\n                tabhead=\"Sales\"\n              />\n            ) : null}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default SalesHierarchy\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CFormSelect, CRow } from '@coreui/react'\nimport ImportModal from './modal/ImportModal'\nimport { Table } from 'antd'\nimport SalesTarget from '../../assets/sample/SalesTarget.xlsx'\nimport {\n  getAllTargetDetails,\n  getAllClusterDetails,\n  getAllStateDetails,\n  getExcelTSCluster,\n  getExcelByClusterDetails,\n} from '../../redux/sales/action'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useCookies } from 'react-cookie'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload, cilCloudUpload } from '@coreui/icons'\nimport { ROLE_LIST, UPLOAD_URL } from 'src/constants/constants'\nimport { ToastContainer, toast } from 'react-toastify'\nimport debounce from 'lodash.debounce'\n\nconst Target = () => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const hasMoreRef = useRef(true)\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const clusterRef = useRef('All')\n\n  const [cookies] = useCookies(['role'])\n  const [visible, setVisible] = useState(false)\n  const salesmanTarget = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.TargetData,\n  )\n  const clusterData = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.ClustersData,\n  )\n  const stateData = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.StateData,\n  )\n\n  const [cluster, setCluster] = useState('All')\n  const [stateName, setSateName] = useState('All')\n  const [loading, setLoading] = useState(false)\n  const role = cookies.role.replace(/[^A-Za-z]/g, '')\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'sno',\n      key: 'sno',\n    },\n    {\n      title: 'ASE Name',\n      dataIndex: 'ase_name',\n      key: 'ase_name',\n    },\n    {\n      title: 'ASM EmpId',\n      dataIndex: 'asm_emp_id',\n      key: 'asm_emp_id',\n    },\n    {\n      title: 'BC Daily',\n      dataIndex: 'bc_daily',\n      key: 'bc_daily',\n    },\n    {\n      title: 'Bill Cuts Tgt JC',\n      dataIndex: 'bill_cuts_tgt_jc',\n      key: 'bill_cuts_tgt_jc',\n    },\n    {\n      title: 'Focus Brand Name',\n      dataIndex: 'focus_brand_name',\n      key: 'focus_brand_name',\n    },\n    {\n      title: 'Focus Brand UBO Target',\n      dataIndex: 'focus_brand_ubo_tgt',\n      key: 'focus_brand_ubo_tgt',\n    },\n    {\n      title: 'FS UBO',\n      dataIndex: 'fs_ubo',\n      key: 'fs_ubo',\n    },\n    {\n      title: 'JC',\n      dataIndex: 'jc',\n      key: 'jc',\n    },\n  ]\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current // Calculate the start index based on the page number\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1, // Generating serial number with the correct offset\n    }))\n  }\n\n  useEffect(() => {\n    if (salesmanTarget && salesmanTarget.length > 0) {\n      const dataWithSerialNumbers = addSerialNumbers(salesmanTarget)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    } else {\n      hasMoreRef.current = false\n    }\n    setLoading(false)\n  }, [salesmanTarget])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getAllTargetDetails(pageRef.current, sizeRef.current, clusterRef.current, stateName, role),\n      )\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.ctmo-salesman-target .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  const [isImportEnabled, setIsImportEnabled] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n\n    dispatch(getAllClusterDetails())\n    dispatch(getAllTargetDetails(pageRef.current, sizeRef.current, cluster, stateName, role))\n    const today = new Date().getDate()\n    if (today === 18 || today === 19 || today === 20) {\n      setIsImportEnabled(true)\n    } else {\n      setIsImportEnabled(false)\n    }\n  }, [dispatch, role])\n\n  const handleDownload = async () => {\n    try {\n      await dispatch(getExcelTSCluster())\n        .then((response) => {\n          const url = window.URL.createObjectURL(new Blob([response.data]))\n          const link = document.createElement('a')\n          link.href = url\n          link.setAttribute('download', 'SalesTarget.xlsx')\n          document.body.appendChild(link)\n          link.click()\n          link.parentNode.removeChild(link) // Clean up\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const handleDownloadCS = async () => {\n    try {\n      await dispatch(getExcelByClusterDetails(cluster, 'salesman_target'))\n        .then((response) => {\n          if (response.data.status === true) {\n            if (response.data.data.length > 0) {\n              const excelUrl = UPLOAD_URL + response.data.data[0].excelName\n              downloadExcel(excelUrl)\n            } else {\n              toast.error('No updated Excel')\n            }\n          } else {\n            toast.error('No updated Excel')\n          }\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } catch (err) {\n      console.error(err)\n    } finally {\n      setLoading(false) // Hide loading indicator if needed\n    }\n  }\n\n  const downloadExcel = (url) => {\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', 'SalesmanTarget.xlsx') // Optional: specify a file name\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  const getCluster = (e) => {\n    setLoading(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n    setCluster(e.target.value)\n    setSateName('All')\n    clusterRef.current = e.target.value\n    dispatch(getAllStateDetails(e.target.value))\n    dispatch(getAllTargetDetails(pageRef.current, sizeRef.current, e.target.value, 'All', role))\n    setLoading(false)\n  }\n\n  const getStateCluster = (e) => {\n    setLoading(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n\n    setLoading(true)\n    setSateName(e.target.value)\n    dispatch(\n      getAllTargetDetails(\n        pageRef.current,\n        sizeRef.current,\n        clusterRef.current,\n        e.target.value,\n        role,\n      ),\n    )\n    setLoading(false)\n  }\n\n  return (\n    <CRow>\n      <ToastContainer />\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Target</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CRow className=\"mb-2\">\n              <CCol>\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CFormSelect aria-label=\"Choose Cluster\" onChange={getCluster}>\n                    <option value=\"All\">Choose Cluster</option>\n                    {Array.isArray(clusterData) &&\n                      clusterData.map((cluster, index) => (\n                        <option key={index} value={cluster}>\n                          {cluster}\n                        </option>\n                      ))}\n                  </CFormSelect>\n                )}\n              </CCol>\n              <CCol>\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CFormSelect aria-label=\"Choose State\" onChange={getStateCluster}>\n                    <option value=\"All\">Choose State</option>\n                    {Array.isArray(stateData) &&\n                      stateData.map((state, index) => (\n                        <option key={index} value={state}>\n                          {state}\n                        </option>\n                      ))}\n                  </CFormSelect>\n                )}\n              </CCol>\n              <CCol className=\"d-flex justify-content-end\">\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"me-3\"\n                    onClick={handleDownloadCS}\n                  >\n                    <CIcon icon={cilCloudDownload} className=\"me-2\" title=\"Download file\" />\n                    Download Excel\n                  </CButton>\n                )}\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CLUSTERS && (\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"me-3\"\n                    onClick={handleDownload}\n                  >\n                    <CIcon icon={cilCloudDownload} className=\"me-2\" title=\"Download file\" />\n                    Download Excel\n                  </CButton>\n                )}\n                {!isImportEnabled && (\n                  <CButton\n                    color=\"success\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setVisible(true)}\n                  >\n                    <CIcon icon={cilCloudUpload} className=\"me-2\" title=\"Download file\" /> Import\n                  </CButton>\n                )}\n              </CCol>\n            </CRow>\n            <div className=\"ctmo-salesman-target\">\n              <style>{`\n                .ant-table-body {\n                  scrollbar-width: thin;\n                }\n              `}</style>\n              <Table\n                columns={columns}\n                dataSource={data}\n                pagination={false}\n                scroll={{ y: 250 }}\n                // rowKey=\"id\"\n                loading={loading}\n              />\n            </div>\n            {visible ? (\n              <ImportModal\n                visible={visible}\n                setVisible={setVisible}\n                tabhead=\"Target\"\n                clusterData={cluster}\n              />\n            ) : null}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Target\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CButton, CCard, CCardBody, CCardHeader, CCol, CFormSelect, CRow } from '@coreui/react'\nimport ImportModal from './modal/ImportModal'\nimport { Table } from 'antd'\nimport RSWiseTarget from '../../assets/sample/RSWiseTarget.xlsx'\nimport {\n  getAllRSDetails,\n  getAllClusterDetails,\n  getAllStateDetails,\n  getExcelByClusterDetails,\n} from '../../redux/sales/action'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useCookies } from 'react-cookie'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload, cilCloudUpload } from '@coreui/icons'\nimport { ROLE_LIST, UPLOAD_URL } from 'src/constants/constants'\nimport { ToastContainer, toast } from 'react-toastify'\nimport debounce from 'lodash.debounce'\n\nconst RSwiseTarget = () => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const hasMoreRef = useRef(true)\n  const tableBodyRef = useRef(null)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const clusterRef = useRef('All')\n\n  const [cookies] = useCookies(['role'])\n  const [visible, setVisible] = useState(false)\n  const rsData = useSelector((state) => state.saleshierarchyData && state.saleshierarchyData.RSData)\n  const clusterData = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.ClustersData,\n  )\n  const stateData = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.StateData,\n  )\n  const [cluster, setCluster] = useState('All')\n  const [stateName, setSateName] = useState('All')\n  const [loading, setLoading] = useState(false)\n  const role = cookies.role.replace(/[^A-Za-z]/g, '')\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'sno',\n      key: 'sno',\n    },\n    {\n      title: 'ASE Name',\n      dataIndex: 'aseName',\n      key: 'aseName',\n    },\n    {\n      title: 'ASM EmpId',\n      dataIndex: 'aseEmpId',\n      key: 'aseEmpId',\n    },\n    {\n      title: 'Distributor Against Salesman Budget Count',\n      dataIndex: 'distributorAgainstSalesmanBudgetCount',\n      key: 'distributorAgainstSalesmanBudgetCount',\n    },\n    {\n      title: 'Focus Brand Name',\n      dataIndex: 'focusBrandName',\n      key: 'focusBrandName',\n    },\n    {\n      title: 'Focus Brand UBO Target',\n      dataIndex: 'focusBrandUBOTgt',\n      key: 'focusBrandUBOTgt',\n    },\n    {\n      title: 'RS Code',\n      dataIndex: 'rsCode',\n      key: 'rsCode',\n    },\n    {\n      title: 'RS Name',\n      dataIndex: 'rsName',\n      key: 'rsName',\n    },\n    {\n      title: 'SDE EmpId',\n      dataIndex: 'sdeEmpId',\n      key: 'sdeEmpId',\n    },\n  ]\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current // Calculate the start index based on the page number\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1, // Generating serial number with the correct offset\n    }))\n  }\n\n  useEffect(() => {\n    if (rsData && rsData.length > 0) {\n      const dataWithSerialNumbers = addSerialNumbers(rsData)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    } else {\n      hasMoreRef.current = false\n    }\n    setLoading(false)\n  }, [rsData])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(\n        getAllRSDetails(pageRef.current, sizeRef.current, clusterRef.current, stateName, role),\n      )\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.ctmo-rs-target .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  const [isImportEnabled, setIsImportEnabled] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n\n    dispatch(getAllClusterDetails())\n    dispatch(getAllRSDetails(pageRef.current, sizeRef.current, clusterRef.current, stateName, role))\n    const today = new Date().getDate()\n    if (today === 18 || today === 19 || today === 20) {\n      setIsImportEnabled(true)\n    } else {\n      setIsImportEnabled(false)\n    }\n  }, [dispatch, role])\n\n  const handleDownload = () => {\n    const link = document.createElement('a')\n    link.href = RSWiseTarget\n    link.download = 'RSWiseTarget.xlsx'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  const handleDownloadCS = async () => {\n    try {\n      await dispatch(getExcelByClusterDetails(cluster, 'rs_target'))\n        .then((response) => {\n          if (response.data.status === true) {\n            if (response.data.data.length > 0) {\n              const excelUrl = UPLOAD_URL + response.data.data[0].excelName\n              downloadExcel(excelUrl)\n            } else {\n              toast.error('No updated Excel')\n            }\n          } else {\n            toast.error('No updated Excel')\n          }\n        })\n        .catch((error) => {\n          console.error(error)\n        })\n    } catch (err) {\n      console.error(err)\n    } finally {\n      setLoading(false) // Hide loading indicator if needed\n    }\n  }\n\n  const downloadExcel = (url) => {\n    const link = document.createElement('a')\n    link.href = url\n    link.setAttribute('download', 'RSWiseTarget.xlsx') // Optional: specify a file name\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n  }\n\n  const getCluster = (e) => {\n    setLoading(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n    setCluster(e.target.value)\n    setSateName('All')\n\n    clusterRef.current = e.target.value\n    dispatch(getAllStateDetails(e.target.value))\n    dispatch(getAllRSDetails(pageRef.current, sizeRef.current, e.target.value, 'All', role))\n    setLoading(false)\n  }\n\n  const getStateCluster = (e) => {\n    setLoading(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n    setSateName(e.target.value)\n    dispatch(\n      getAllRSDetails(pageRef.current, sizeRef.current, clusterRef.current, e.target.value, role),\n    )\n    setLoading(false)\n  }\n\n  return (\n    <CRow>\n      <ToastContainer />\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>RS Wise Target</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CRow className=\"mb-2\">\n              <CCol>\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CFormSelect aria-label=\"Choose Cluster\" onChange={getCluster}>\n                    <option value=\"All\">Choose Cluster</option>\n                    {Array.isArray(clusterData) &&\n                      clusterData.map((cluster, index) => (\n                        <option key={index} value={cluster}>\n                          {cluster}\n                        </option>\n                      ))}\n                  </CFormSelect>\n                )}\n              </CCol>\n              <CCol>\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CFormSelect aria-label=\"Choose State\" onChange={getStateCluster}>\n                    <option value=\"All\">Choose State</option>\n                    {Array.isArray(stateData) &&\n                      stateData.map((state, index) => (\n                        <option key={index} value={state}>\n                          {state}\n                        </option>\n                      ))}\n                  </CFormSelect>\n                )}\n              </CCol>\n              <CCol className=\"d-flex justify-content-end\">\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO && (\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"me-3\"\n                    onClick={handleDownloadCS}\n                  >\n                    <CIcon icon={cilCloudDownload} className=\"me-2\" title=\"Download file\" />\n                    Download Excel\n                  </CButton>\n                )}\n                {cookies.role.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CLUSTERS && (\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"me-3\"\n                    onClick={handleDownload}\n                  >\n                    <CIcon icon={cilCloudDownload} className=\"me-2\" title=\"Download file\" />\n                    Download Excel\n                  </CButton>\n                )}\n                {!isImportEnabled && (\n                  <CButton\n                    color=\"success\"\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setVisible(true)}\n                  >\n                    <CIcon icon={cilCloudUpload} className=\"me-2\" title=\"Download file\" /> Import\n                  </CButton>\n                )}\n              </CCol>\n            </CRow>\n            <div className=\"ctmo-rs-target\">\n              <style>{`\n                .ant-table-body {\n                  scrollbar-width: thin;\n                }\n              `}</style>\n              <Table\n                columns={columns}\n                dataSource={data}\n                pagination={false}\n                scroll={{ y: 250 }}\n                // rowKey=\"id\"\n                loading={loading}\n              />\n            </div>\n            {visible ? (\n              <ImportModal\n                visible={visible}\n                setVisible={setVisible}\n                tabhead=\"RSwiseTarget\"\n                clusterData={cluster}\n              />\n            ) : null}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default RSwiseTarget\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport ImportModal from './modal/ImportModal'\nimport { Space, Table } from 'antd'\nimport { getAllHistoryDetails } from '../../redux/sales/action'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UPLOAD_URL } from '../../constants/constants'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload } from '@coreui/icons'\nimport dayjs from 'dayjs'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\nimport debounce from 'lodash.debounce'\nimport { CSpinner } from '@coreui/react'\n\nconst Historylog = () => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState([])\n  const hasMoreRef = useRef(true)\n  const tableBodyRef = useRef(null)\n  const [commonLoader, setCommonLoader] = useState(true)\n\n  const [visible, setVisible] = useState(false)\n  const pageRef = useRef(0)\n  const sizeRef = useRef(5)\n  const HistoryLogData = useSelector(\n    (state) => state.saleshierarchyData && state.saleshierarchyData.HistoryData,\n  )\n\n  const addSerialNumbers = (data) => {\n    const startIndex = pageRef.current * sizeRef.current // Calculate the start index based on the page number\n    return data.map((item, index) => ({\n      ...item,\n      sno: startIndex + index + 1, // Generating serial number with the correct offset\n    }))\n  }\n\n  useEffect(() => {\n    if (HistoryLogData && HistoryLogData.length > 0) {\n      const dataWithSerialNumbers = addSerialNumbers(HistoryLogData)\n      if (dataWithSerialNumbers.length < sizeRef.current) {\n        hasMoreRef.current = false\n      }\n      setData((prevData) => [...prevData, ...dataWithSerialNumbers])\n      pageRef.current += 1\n    }\n    setCommonLoader(false)\n  }, [HistoryLogData])\n\n  const handleScroll = useCallback(\n    debounce(() => {\n      if (!tableBodyRef.current) return\n      const { scrollTop, scrollHeight, clientHeight } = tableBodyRef.current\n      if (scrollTop + clientHeight >= scrollHeight - 10) {\n        fetchMoreData()\n      }\n    }, 100),\n    [],\n  )\n\n  const fetchMoreData = () => {\n    if (hasMoreRef.current) {\n      dispatch(getAllHistoryDetails(pageRef.current, sizeRef.current))\n    }\n  }\n\n  useEffect(() => {\n    const tableBody = document.querySelector('.history-log .ant-table-body')\n    if (tableBody) {\n      tableBodyRef.current = tableBody\n      tableBody.addEventListener('scroll', handleScroll)\n    }\n    return () => {\n      if (tableBody) {\n        tableBody.removeEventListener('scroll', handleScroll)\n      }\n    }\n  }, [handleScroll])\n\n  useEffect(() => {\n    setCommonLoader(true)\n    pageRef.current = 0\n    setData([])\n    hasMoreRef.current = true\n    dispatch(getAllHistoryDetails(pageRef.current, sizeRef.current))\n  }, [dispatch])\n\n  // dayjs.extend(advancedFormat)\n  // dayjs.extend(customParseFormat)\n  const columns = [\n    {\n      title: '#',\n      dataIndex: 'sno',\n    },\n    {\n      title: 'Cluster',\n      dataIndex: 'clusterName',\n      key: 'clusterName',\n    },\n    {\n      title: 'Type',\n      dataIndex: 'excelType',\n      key: 'excelType',\n      render: (_, record) => {\n        // Function to format the excelType string\n        const formatExcelType = (type) => {\n          return type\n            .split('_')\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ')\n        }\n\n        return formatExcelType(record.excelType)\n      },\n    },\n    {\n      title: 'Excel',\n      dataIndex: 'smSysName',\n      key: 'smSysName',\n      render: (_, record) => {\n        if (record.clusterExcel) {\n          return (\n            <Space size=\"middle\">\n              <a\n                href={UPLOAD_URL + record.clusterExcel}\n                className=\"btn text-success\"\n                alt={'Current'}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {' '}\n                <CIcon\n                  icon={cilCloudDownload}\n                  className=\"me-1\"\n                  title=\"Download file\"\n                /> Download{' '}\n              </a>\n            </Space>\n          )\n        } else {\n          return <Space size=\"middle\">No Excel</Space>\n        }\n      },\n    },\n    {\n      title: 'CTMO Excel',\n      dataIndex: 'smSysName',\n      key: 'smSysName',\n      render: (_, record) => {\n        if (record.ctmoExcel) {\n          return (\n            <Space size=\"middle\">\n              <a\n                href={UPLOAD_URL + record.ctmoExcel}\n                className=\"btn text-success\"\n                alt={'Current'}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {' '}\n                <CIcon\n                  icon={cilCloudDownload}\n                  className=\"me-1\"\n                  title=\"Download file\"\n                /> Download{' '}\n              </a>\n            </Space>\n          )\n        } else {\n          return <Space size=\"middle\">No Excel</Space>\n        }\n      },\n    },\n    {\n      title: 'Date',\n      dataIndex: 'zm',\n      key: 'zm',\n      render: (_, record) => {\n        return dayjs(record.createdat).format('DD MMM YYYY h.mmA')\n      },\n    },\n  ]\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>History Log</strong>\n          </CCardHeader>\n          <CCardBody>\n            {/* <CTable columns={columns} items={items} /> */}\n            <div className=\"history-log\">\n              <style>{`\n                .ant-table-body {\n                  scrollbar-width: thin;\n                }\n              `}</style>\n              <Table\n                columns={columns}\n                dataSource={data}\n                pagination={false}\n                scroll={{ y: 300 }}\n                loading={{\n                  spinning: commonLoader,\n                  indicator: <CSpinner color=\"danger\" />,\n                }}\n                // rowKey=\"id\"\n              />\n            </div>\n\n            {visible ? (\n              <ImportModal visible={visible} setVisible={setVisible} tabhead=\"Sales\" />\n            ) : null}\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Historylog\n","import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CButton,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { cilLockLocked } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { FaEye, FaEyeSlash } from 'react-icons/fa'\nimport { toast, ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useDispatch } from 'react-redux'\nimport { updatePassword } from 'src/redux/sales/action'\n\nconst ChangePassword = () => {\n  const navigate = useNavigate()\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [errors, setErrors] = useState({})\n  const [showPassword, setShowPassword] = useState(false)\n  const [confirmShowPassword, setConfirmShowPassword] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const resetForm = () => {\n    setPassword('')\n    setConfirmPassword('')\n    setErrors({})\n  }\n\n  const validate = () => {\n    let errors = {}\n    if (!password) {\n      errors.password = 'Password is required'\n    }\n    if (password !== confirmPassword) {\n      errors.confirmPassword = 'Password & Confirm Password do not match'\n    }\n    return errors\n  }\n\n  const onFinish = async (e) => {\n    e.preventDefault()\n\n    const errors = validate()\n    if (Object.keys(errors).length > 0) {\n      setErrors(errors)\n      toast.error('Please fill in all fields correctly')\n      return\n    }\n\n    const formData = new FormData()\n    formData.append('password', password)\n    formData.append('confirmPassword', confirmPassword)\n\n    try {\n      const response = await dispatch(updatePassword(formData))\n      if (response.status === 200) {\n        resetForm()\n        toast.success(response.data.message)\n      } else {\n        toast.error(response.data.message)\n      }\n    } catch (error) {\n      console.error('Error during update password:', error)\n      toast.error(error.response?.data?.message || 'Error during update password')\n    }\n  }\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const togglePasswordVisibility2 = () => {\n    setConfirmShowPassword(!confirmShowPassword)\n  }\n\n  return (\n    <CRow>\n      <CCol xs={7}>\n        <CCard className=\"mb-4\">\n          <ToastContainer />\n          <CCardHeader>\n            <strong>Change Password</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CForm onSubmit={onFinish}>\n              <p className=\"text-medium-emphasis\">Reset your password here!</p>\n              <CCol xs={6}>\n                <CInputGroup className=\"mb-4\">\n                  {/* <CInputGroupText>\n                    <CIcon icon={cilLockLocked} />\n                  </CInputGroupText> */}\n                  <CFormInput\n                    type={showPassword ? 'text' : 'password'}\n                    placeholder=\"New Password\"\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    isInvalid={!!errors.password}\n                  />\n                  <CInputGroupText onClick={togglePasswordVisibility} style={{ cursor: 'pointer' }}>\n                    {showPassword ? <FaEye /> : <FaEyeSlash />}\n                  </CInputGroupText>\n                  {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\n                </CInputGroup>\n                <CInputGroup className=\"mb-4\">\n                  {/* <CInputGroupText>\n                    <CIcon icon={cilLockLocked} />\n                  </CInputGroupText> */}\n                  <CFormInput\n                    type={confirmShowPassword ? 'text' : 'password'}\n                    placeholder=\"Confirm Password\"\n                    autoComplete=\"new-password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    isInvalid={!!errors.confirmPassword}\n                  />\n                  <CInputGroupText\n                    onClick={togglePasswordVisibility2}\n                    style={{ cursor: 'pointer' }}\n                  >\n                    {confirmShowPassword ? <FaEye /> : <FaEyeSlash />}\n                  </CInputGroupText>\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n                  )}\n                </CInputGroup>\n              </CCol>\n\n              <CRow>\n                <CCol xs={6}>\n                  <CButton color=\"primary\" className=\"px-4\" type=\"submit\">\n                    Submit\n                  </CButton>\n                </CCol>\n              </CRow>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\nimport SalesHierarchy from './views/pages/SalesHierarchy'\nimport Target from './views/pages/Target'\nimport RSwiseTarget from './views/pages/RSwiseTarget'\nimport Historylog from './views/pages/Historylog'\nimport ChangePassword from './views/pages/login/ChangePassword'\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/sales-hierarchy', name: 'Sales Hierarchy', element: SalesHierarchy },\n  { path: '/target', name: 'Salesman Target', element: Target },\n  { path: '/rs-wise-target', name: 'RS Wise Target', element: RSwiseTarget },\n  { path: '/history-log', name: 'History Log', element: Historylog },\n  { path: '/change-password', name: 'Change Password', element: ChangePassword },\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/xenon/#/sales-hierarchy\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          XENON\n        </a>\n        <span className=\"ms-1\">&copy; 2024 </span>\n      </div>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n          HEPL\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport {\n  CAvatar,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport { cilLockUnlocked, cilAccountLogout, cilSettings, cilUser } from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useAuth } from '../../views/pages/login/AuthContext'\n\nimport avatar8 from './../../assets/images/avatars/8.jpg'\nimport { Navigate } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { useNavigate } from 'react-router-dom'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n\n  const { logout } = useAuth()\n  const handleLogout = async () => {\n    try {\n      const response = await logout()\n      if (response.status === 200) {\n        Navigate('/')\n      }\n    } catch (error) {\n      // toast.error('Unable Logout', error)\n      console.log(error)\n    }\n  }\n\n  // const navigate = useNavigate();\n\n  const handleChangePassword = (event) => {\n    event.preventDefault() // Prevent the default action to avoid full page reload\n    navigate('/change-password')\n  }\n\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <CAvatar src={avatar8} size=\"md\" />\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownHeader className=\"bg-light fw-semibold py-2\">Account</CDropdownHeader>\n        {/* <CDropdownItem href=\"#\">\n          <CIcon icon={cilUser} className=\"me-2\" />\n          Profile\n        </CDropdownItem> */}\n        <CDropdownItem href=\"#\" onClick={handleChangePassword}>\n          <CIcon icon={cilLockUnlocked} className=\"me-2\" />\n          Change Password\n        </CDropdownItem>\n        <CDropdownDivider />\n        <CDropdownItem href=\"#\" onClick={handleLogout}>\n          {/* <CIcon icon={cilLockLocked} className=\"me-2\" /> */}\n          <CIcon icon={cilAccountLogout} className=\"me-2\" />\n          Sign Out\n        </CDropdownItem>\n      </CDropdownMenu>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","export const logo = [\n  '608 134',\n  `\n  <title>coreui react pro</title>\n  <g>\n    <g style=\"fill:#00a1ff\">\n      <path d=\"M362.0177,90.1512,353.25,69.4149a.2507.2507,0,0,0-.2559-.1914H343.01a.2263.2263,0,0,0-.2559.2559V90.0233a.5657.5657,0,0,1-.64.64h-1.2163a.5652.5652,0,0,1-.64-.64V46.5028a.5655.5655,0,0,1,.64-.64H353.442a9.9792,9.9792,0,0,1,7.7437,3.2324A12.2,12.2,0,0,1,364.13,57.64a12.4389,12.4389,0,0,1-2.24,7.584,9.37,9.37,0,0,1-6.08,3.7441c-.1709.086-.2139.1915-.128.3194l8.7041,20.6084.064.2558q0,.5127-.5757.5118h-1.1523A.703.703,0,0,1,362.0177,90.1512ZM342.754,48.3593v18.496a.2259.2259,0,0,0,.2559.2559h10.3037a7.6713,7.6713,0,0,0,6.0166-2.5918,9.8807,9.8807,0,0,0,2.3037-6.8164,10.2875,10.2875,0,0,0-2.272-6.9756,7.6033,7.6033,0,0,0-6.0483-2.624H343.01A.2263.2263,0,0,0,342.754,48.3593Z\"/>\n      <path d=\"M401.3263,48.1034H381.2945a.2262.2262,0,0,0-.2558.2559v18.496a.2259.2259,0,0,0,.2558.2559h13.8238a.5664.5664,0,0,1,.6406.64v.96a.5663.5663,0,0,1-.6406.6406H381.2945a.2263.2263,0,0,0-.2558.2559v18.56a.2258.2258,0,0,0,.2558.2558h20.0318a.5671.5671,0,0,1,.6406.6407v.96a.566.566,0,0,1-.6406.64H379.1827a.5653.5653,0,0,1-.64-.64V46.5028a.5656.5656,0,0,1,.64-.64h22.1436a.5664.5664,0,0,1,.6406.64v.96A.5663.5663,0,0,1,401.3263,48.1034Z\"/>\n      <path d=\"M439.047,90.1512l-2.4317-8.832a.2971.2971,0,0,0-.32-.1924H419.5274a.2957.2957,0,0,0-.32.1924l-2.3681,8.7676a.6577.6577,0,0,1-.7036.5762H414.919a.5385.5385,0,0,1-.5756-.7041l12.0317-43.584a.6436.6436,0,0,1,.7041-.5117h1.6a.6442.6442,0,0,1,.7041.5117l12.16,43.584.0644.1923q0,.5127-.64.5118h-1.2163A.6428.6428,0,0,1,439.047,90.1512ZM419.9435,78.9188a.3031.3031,0,0,0,.2236.0967h15.4883a.3048.3048,0,0,0,.2236-.0967c.0645-.0635.0742-.1162.0322-.1592l-7.872-28.9287c-.043-.0849-.086-.1279-.128-.1279s-.0859.043-.1279.1279L419.9112,78.76C419.8683,78.8026,419.879,78.8553,419.9435,78.9188Z\"/>\n      <path d=\"M456.6017,87.911a11.6372,11.6372,0,0,1-3.3277-8.7041V57.1913a11.4158,11.4158,0,0,1,3.36-8.5762,12.0941,12.0941,0,0,1,8.8-3.2637,12.2566,12.2566,0,0,1,8.8643,3.2315,11.3927,11.3927,0,0,1,3.36,8.6084v.64a.5663.5663,0,0,1-.6406.6407l-1.28.0634q-.6408,0-.64-.5761v-.8321a9.289,9.289,0,0,0-2.6558-6.9121,10.6734,10.6734,0,0,0-14.0161,0,9.2854,9.2854,0,0,0-2.6563,6.9121V79.3993a9.2808,9.2808,0,0,0,2.6563,6.9121,10.67,10.67,0,0,0,14.0161,0,9.2843,9.2843,0,0,0,2.6558-6.9121v-.7686q0-.5757.64-.5752l1.28.0635a.5667.5667,0,0,1,.6406.6406v.5118a11.4952,11.4952,0,0,1-3.36,8.64,13.6227,13.6227,0,0,1-17.6963,0Z\"/>\n      <path d=\"M514.4376,46.5028v.96a.5658.5658,0,0,1-.64.6406H503.046a.2263.2263,0,0,0-.2559.2559v41.664a.566.566,0,0,1-.6406.64h-1.2158a.5652.5652,0,0,1-.64-.64V48.3593a.2266.2266,0,0,0-.2558-.2559H489.8619a.5656.5656,0,0,1-.64-.6406v-.96a.5656.5656,0,0,1,.64-.64H513.798A.5658.5658,0,0,1,514.4376,46.5028Z\"/>\n      <path d=\"M522.0665,89.5116a2.8385,2.8385,0,0,1-.8-2.0488,2.9194,2.9194,0,0,1,.8-2.1114,2.7544,2.7544,0,0,1,2.08-.832,2.8465,2.8465,0,0,1,2.9438,2.9434,2.7541,2.7541,0,0,1-.832,2.08,2.9221,2.9221,0,0,1-2.1118.8008A2.754,2.754,0,0,1,522.0665,89.5116Z\"/>\n      <path d=\"M542.4054,88.0077a11.3123,11.3123,0,0,1-3.2-8.416v-5.44a.5656.5656,0,0,1,.64-.64h1.2158a.5661.5661,0,0,1,.64.64v5.5039a9.1424,9.1424,0,0,0,2.5283,6.72,8.9745,8.9745,0,0,0,6.6875,2.5605,8.7908,8.7908,0,0,0,9.28-9.28V46.5028a.5655.5655,0,0,1,.64-.64h1.2163a.566.566,0,0,1,.64.64V79.5917a11.2545,11.2545,0,0,1-3.2325,8.416,13.0618,13.0618,0,0,1-17.0556,0Z\"/>\n      <path d=\"M580.35,88.1034a10.4859,10.4859,0,0,1-3.36-8.1279v-1.792a.5663.5663,0,0,1,.64-.6407h1.0884a.5668.5668,0,0,1,.64.6407v1.6a8.5459,8.5459,0,0,0,2.752,6.6562,10.5353,10.5353,0,0,0,7.36,2.4961,9.8719,9.8719,0,0,0,6.9761-2.3681,8.2161,8.2161,0,0,0,2.56-6.336,8.4,8.4,0,0,0-1.12-4.416,11.3812,11.3812,0,0,0-3.3281-3.3926,71.6714,71.6714,0,0,0-6.1763-3.7119,71.0479,71.0479,0,0,1-6.24-3.84,12.1711,12.1711,0,0,1-3.4238-3.68,10.2614,10.2614,0,0,1-1.28-5.3438,9.8579,9.8579,0,0,1,3.0718-7.7441,12.0122,12.0122,0,0,1,8.32-2.752q5.6954,0,8.96,3.1036a10.8251,10.8251,0,0,1,3.2642,8.2246v1.6a.5658.5658,0,0,1-.64.64h-1.1519a.5652.5652,0,0,1-.64-.64V56.8075a8.8647,8.8647,0,0,0-2.624-6.6885,9.9933,9.9933,0,0,0-7.232-2.5273,9.37,9.37,0,0,0-6.5278,2.1435,7.8224,7.8224,0,0,0-2.3682,6.1123,7.8006,7.8006,0,0,0,1.0244,4.16,10.387,10.387,0,0,0,3.0078,3.0391,62.8714,62.8714,0,0,0,5.9522,3.4882,71.0575,71.0575,0,0,1,6.72,4.2559,13.4674,13.4674,0,0,1,3.648,3.9365,10.049,10.049,0,0,1,1.28,5.1836,10.7177,10.7177,0,0,1-3.2637,8.1924q-3.2637,3.0717-8.832,3.0723Q583.71,91.1757,580.35,88.1034Z\"/>\n    </g>\n    <g style=\"fill:#3c4b64\">\n      <g>\n        <path d=\"M99.835,36.0577l-39-22.5167a12,12,0,0,0-12,0l-39,22.5166a12.0339,12.0339,0,0,0-6,10.3924V91.4833a12.0333,12.0333,0,0,0,6,10.3923l39,22.5167a12,12,0,0,0,12,0l39-22.5167a12.0331,12.0331,0,0,0,6-10.3923V46.45A12.0334,12.0334,0,0,0,99.835,36.0577Zm-2,55.4256a4,4,0,0,1-2,3.4641l-39,22.5167a4.0006,4.0006,0,0,1-4,0l-39-22.5167a4,4,0,0,1-2-3.4641V46.45a4,4,0,0,1,2-3.4642l39-22.5166a4,4,0,0,1,4,0l39,22.5166a4,4,0,0,1,2,3.4642Z\"/>\n        <path d=\"M77.8567,82.0046h-2.866a4,4,0,0,0-1.9247.4934L55.7852,91.9833,35.835,80.4648V57.4872l19.95-11.5185,17.2893,9.4549a3.9993,3.9993,0,0,0,1.9192.4906h2.8632a2,2,0,0,0,2-2V51.2024a2,2,0,0,0-1.04-1.7547L59.628,38.9521a8.0391,8.0391,0,0,0-7.8428.09L31.8346,50.56a8.0246,8.0246,0,0,0-4,6.9287v22.976a8,8,0,0,0,4,6.9283l19.95,11.5186a8.0429,8.0429,0,0,0,7.8433.0879l19.19-10.5312a2,2,0,0,0,1.0378-1.7533v-2.71A2,2,0,0,0,77.8567,82.0046Z\"/>\n      </g>\n      <g>\n        <path d=\"M172.58,45.3618a15.0166,15.0166,0,0,0-15,14.9995V77.6387a15,15,0,0,0,30,0V60.3613A15.0166,15.0166,0,0,0,172.58,45.3618Zm7,32.2769a7,7,0,0,1-14,0V60.3613a7,7,0,0,1,14,0Z\"/>\n        <path d=\"M135.9138,53.4211a7.01,7.01,0,0,1,7.8681,6.0752.9894.9894,0,0,0,.9843.865h6.03a1.0108,1.0108,0,0,0,.9987-1.0971,15.0182,15.0182,0,0,0-15.7162-13.8837,15.2881,15.2881,0,0,0-14.2441,15.4163V77.2037A15.288,15.288,0,0,0,136.0792,92.62a15.0183,15.0183,0,0,0,15.7162-13.8842,1.0107,1.0107,0,0,0-.9987-1.0971h-6.03a.9894.9894,0,0,0-.9843.865,7.01,7.01,0,0,1-7.8679,6.0757,7.1642,7.1642,0,0,1-6.0789-7.1849V60.6057A7.1638,7.1638,0,0,1,135.9138,53.4211Z\"/>\n        <path d=\"M218.7572,72.9277a12.1585,12.1585,0,0,0,7.1843-11.0771V58.1494A12.1494,12.1494,0,0,0,213.7921,46H196.835a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V74h6.6216l7.9154,17.4138a1,1,0,0,0,.91.5862h6.5911a1,1,0,0,0,.91-1.4138Zm-.8157-11.0771A4.1538,4.1538,0,0,1,213.7926,66h-9.8511V54h9.8511a4.1538,4.1538,0,0,1,4.1489,4.1494Z\"/>\n        <path d=\"M260.835,46h-26a1,1,0,0,0-1,1V91a1,1,0,0,0,1,1h26a1,1,0,0,0,1-1V85a1,1,0,0,0-1-1h-19V72h13a1,1,0,0,0,1-1V65a1,1,0,0,0-1-1h-13V54h19a1,1,0,0,0,1-1V47A1,1,0,0,0,260.835,46Z\"/>\n        <path d=\"M298.835,46h-6a1,1,0,0,0-1,1V69.6475a7.0066,7.0066,0,1,1-14,0V47a1,1,0,0,0-1-1h-6a1,1,0,0,0-1,1V69.6475a15.0031,15.0031,0,1,0,30,0V47A1,1,0,0,0,298.835,46Z\"/>\n        <rect x=\"307.835\" y=\"46\" width=\"8\" height=\"38\" rx=\"1\"/>\n      </g>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\nimport { useCookies } from 'react-cookie'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const [cookies] = useCookies(['role'])\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex ms-auto\">\n          <CNavItem>{cookies?.role}</CNavItem>\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPencil, cilLan, cilAvTimer, cilBuilding, cilSpreadsheet } from '@coreui/icons'\nimport { CNavItem } from '@coreui/react'\nimport { useCookies } from 'react-cookie'\nimport { ROLE_LIST } from './constants/constants'\n\nconst useNavItems = () => {\n  const [cookies] = useCookies(['role'])\n  let _nav = []\n  if (cookies?.role?.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CLUSTERS) {\n    _nav = [\n      {\n        component: CNavItem,\n        name: 'Sales Hierarchy',\n        to: '/sales-hierarchy',\n        icon: <CIcon icon={cilLan} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Salesman Target',\n        to: '/target',\n        icon: <CIcon icon={cilSpreadsheet} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'RS Wise Target',\n        to: '/rs-wise-target',\n        icon: <CIcon icon={cilBuilding} customClassName=\"nav-icon\" />,\n      },\n    ]\n  } else if (cookies?.role?.replace(/[^A-Za-z]/g, '') === ROLE_LIST.CDMO) {\n    _nav = [\n      {\n        component: CNavItem,\n        name: 'Sales Hierarchy',\n        to: '/sales-hierarchy',\n        icon: <CIcon icon={cilLan} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'Salesman Target',\n        to: '/target',\n        icon: <CIcon icon={cilSpreadsheet} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'RS Wise Target',\n        to: '/rs-wise-target',\n        icon: <CIcon icon={cilBuilding} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavItem,\n        name: 'History Log',\n        to: '/history-log',\n        icon: <CIcon icon={cilAvTimer} customClassName=\"nav-icon\" />,\n      },\n    ]\n  } else {\n    _nav = [\n      {\n        component: CNavItem,\n        name: 'Home',\n        to: '/login',\n        icon: <CIcon icon={cilLan} customClassName=\"nav-icon\" />,\n      },\n    ]\n  }\n  return _nav\n}\n\nexport default useNavItems\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport logoNegative from 'src/assets/hepl.png'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport useNavItems from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const navItems = useNavItems()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        <img className=\"sidebar-brand-full\" src={logoNegative} height={35} alt=\"logo\" />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navItems} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["SalesHierarchyImport","formData","tabhead","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","url","response","wrap","_context","prev","next","axiosInstance","post","headers","sent","abrupt","t0","console","error","stop","_x","apply","arguments","getAllSHDetails","page","pageSize","cluster","state","role","ROLE_LIST","CLUSTERS","concat","get","then","res","type","FETCH_SH","payload","data","catch","log","getAllRSDetails","FETCH_RS","getAllTargetDetails","FETCH_TARGET","getAllClusterDetails","FETCH_CLUSTERS","getAllStateDetails","FETCH_STATE","getAllHistoryDetails","FETCH_HISTORY","getExcelByClusterDetails","Ftype","_ref2","_callee2","_context2","_x2","updatePassword","_ref4","_callee4","_context4","_x4","visible","setVisible","clusterData","useDispatch","_useCookies","useCookies","cookies","_slicedToArray","_React$useState","React","_React$useState2","show","setShow","_React$useState3","_React$useState4","dragActive","setDragActive","inputRef","_React$useState5","_React$useState6","selectedFile","setSelectedFile","_React$useState7","_React$useState8","selectedinputFile","setSelectedinputFile","_React$useState9","_React$useState10","setError","_React$useState11","_React$useState12","loading","setLoading","_React$useState13","_React$useState14","validated","setValidated","handleDrag","e","preventDefault","stopPropagation","handleDrop","dataTransfer","files","file","handleSubmit","currentTarget","checkValidity","CDMO","FormData","append","toast","success","message","finish","_jsxs","CModal","alignment","onClose","children","_jsx","ToastContainer","CModalHeader","CModalTitle","id","CModalBody","CForm","className","noValidate","onSubmit","CCol","md","CFormInput","multiple","accept","onChange","target","ref","style","display","required","CFormLabel","htmlFor","onClick","current","click","onDragEnter","onDragOver","onDragLeave","onDrop","border","padding","textAlign","cursor","width","name","position","top","left","height","zIndex","backgroundColor","xs","CButton","color","disabled","_useState","useState","_useState2","shdata","setData","hasMoreRef","useRef","tableBodyRef","pageRef","sizeRef","clusterRef","_useState3","_useState4","SalesHierarchy","useSelector","saleshierarchyData","saleHData","ClustersData","stateData","StateData","_useState5","_useState6","setCluster","_useState7","_useState8","stateName","setSateName","_useState9","_useState10","useEffect","length","dataWithSerialNumbers","startIndex","map","item","index","_objectSpread","sno","addSerialNumbers","prevData","_toConsumableArray","handleScroll","useCallback","debounce","_tableBodyRef$current","scrollTop","scrollHeight","clientHeight","fetchMoreData","tableBody","document","querySelector","addEventListener","removeEventListener","_useState11","_useState12","isImportButtonEnabled","setIsImportButtonEnabled","replace","dayOfWeek","Date","getDay","checkDay","getCluster","value","handleDownloadCS","status","excelUrl","UPLOAD_URL","excelName","downloadExcel","link","createElement","href","setAttribute","body","appendChild","removeChild","CRow","CCard","CCardHeader","CCardBody","CFormSelect","Array","isArray","variant","size","CIcon","icon","cilCloudDownload","title","salesh","download","cilCloudUpload","Table","columns","dataIndex","key","dataSource","pagination","scroll","y","ImportModal","salesmanTarget","TargetData","isImportEnabled","setIsImportEnabled","today","getDate","handleDownload","_ref3","_callee3","_context3","responseType","_x3","window","URL","createObjectURL","Blob","parentNode","rsData","RSData","RSWiseTarget","commonLoader","setCommonLoader","HistoryLogData","HistoryData","render","_","record","excelType","split","word","charAt","toUpperCase","slice","join","clusterExcel","Space","alt","rel","ctmoExcel","dayjs","createdat","format","spinning","indicator","CSpinner","useNavigate","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","showPassword","setShowPassword","confirmShowPassword","setConfirmShowPassword","validate","onFinish","_error$response","_error$response$data","Object","keys","CInputGroup","placeholder","autoComplete","isInvalid","CInputGroupText","FaEye","FaEyeSlash","path","exact","element","Target","RSwiseTarget","Historylog","ChangePassword","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","reduce","curr","array","currentPathname","routeName","routes","currentRoute","find","route","getRouteName","push","active","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","breadcrumb","_createElement","AppContent","CContainer","lg","Suspense","fallback","Routes","idx","Route","Navigate","to","AppFooter","CFooter","navigate","logout","useAuth","handleLogout","CDropdown","CDropdownToggle","placement","caret","CAvatar","src","avatar8","CDropdownMenu","CDropdownHeader","CDropdownItem","event","cilLockUnlocked","CDropdownDivider","cilAccountLogout","logo","sidebarShow","CHeader","fluid","CHeaderToggler","cilMenu","CHeaderBrand","CHeaderNav","CNavItem","AppHeaderDropdown","CHeaderDivider","AppSidebarNav","items","navLink","badge","_Fragment","CBadge","text","navItem","component","rest","_objectWithoutProperties","_excluded","Component","NavLink","navGroup","_item$items","_excluded2","String","toggler","startsWith","_cookies$role","_cookies$role2","cilLan","customClassName","cilSpreadsheet","cilBuilding","cilAvTimer","AppSidebar","navItems","useNavItems","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","logoNegative","CSidebarNav","SimpleBar","CSidebarToggler","AppHeader"],"sourceRoot":""}