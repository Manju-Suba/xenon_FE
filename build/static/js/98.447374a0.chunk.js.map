{"version":3,"file":"static/js/98.447374a0.chunk.js","mappings":"4RAAWA,EAAU,CAAC,UAAW,ojBCAtBC,EAAgB,CAAC,UAAW,8Q,iECmJvC,EA7Hc,WACZ,IAAQC,GAAUC,EAAAA,EAAAA,KAAVD,MACFE,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA4BT,EAAAA,EAAAA,UAAS,CAAC,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,EAAW,WACf,IAAIF,EAAS,CAAC,EAOd,OANKR,IACHQ,EAAOR,MAAQ,qBAEZI,IACHI,EAAOJ,SAAW,wBAEbI,CACT,EAEMG,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAT,EAAAU,EAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,GADzBP,EAAEQ,iBACIjB,EAASE,MACXgB,OAAOC,KAAKnB,GAAQoB,OAAS,GAAC,CAAAN,EAAAE,KAAA,QAEkB,OADlDf,EAAUD,GACVqB,EAAAA,GAAMC,MAAM,uCAAsCR,EAAAS,OAAA,wBAAAT,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAK3BhC,EAAM,CAAEQ,MAAAA,EAAOI,SAAAA,IAAW,OAA3Cc,EAAQI,EAAAU,KACdC,QAAQC,IAAIhB,GACY,MAApBA,EAASiB,QAEG,KADFjB,EAASkB,KAAKA,KAAKC,MAE7B3C,EAAS,MAEL0B,GAAyB,QAAlBD,EAAAD,EAASkB,KAAKA,YAAI,IAAAjB,OAAA,EAAlBA,EAAoBC,OAAQ,GAEzBA,EAAKkB,QAAQ,aAAc,MAC3BC,EAAAA,GAAUC,UAEbpB,IAASmB,EAAAA,GAAUE,KAD5B/C,EAAS,oBAITA,EAAS,MAGbO,EAAS,IACTI,EAAY,KAEZwB,EAAAA,GAAMC,MAAM,sBACbR,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,SAEDO,EAAAA,GAAMC,MAAM,qBAAoBR,EAAAoB,IAChCT,QAAQH,MAAKR,EAAAoB,IAAO,yBAAApB,EAAAqB,OAAA,GAAA3B,EAAA,mBAEvB,gBArCa4B,GAAA,OAAAhC,EAAAiC,MAAA,KAAAC,UAAA,KAuCd,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yDAAwDC,UACrEC,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAAAF,SAAA,EACTF,EAAAA,EAAAA,KAACK,EAAAA,GAAc,KACfL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACL,UAAU,yBAAwBC,UACtCF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAI,EAAEN,UACVC,EAAAA,EAAAA,MAACM,EAAAA,GAAU,CAAAP,SAAA,EACTF,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACT,UAAU,MAAKC,UACpBF,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAAAT,UACRC,EAAAA,EAAAA,MAACS,EAAAA,GAAK,CAACC,SAAUjD,EAASsC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAAC,6BACpCC,EAAAA,EAAAA,MAACW,EAAAA,GAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BF,EAAAA,EAAAA,KAACe,EAAAA,GAAe,CAAAb,UACdF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,KAAM1E,OAEfyD,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CACTC,KAAK,QACLC,YAAY,WACZC,aAAa,WACbC,MAAOrE,EACPsE,SAAU,SAACrD,GAAC,OAAKhB,EAASgB,EAAEsD,OAAOF,MAAM,EACzCG,YAAahE,EAAOR,QAErBQ,EAAOR,QAAS+C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAAEzC,EAAOR,YAE7DkD,EAAAA,EAAAA,MAACW,EAAAA,GAAW,CAACb,UAAU,OAAMC,SAAA,EAC3BF,EAAAA,EAAAA,KAACe,EAAAA,GAAe,CAAAb,UACdF,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,KAAMzE,OAEfwD,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CACTC,KAAK,WACLC,YAAY,WACZC,aAAa,mBACbC,MAAOjE,EACPkE,SAAU,SAACrD,GAAC,OAAKZ,EAAYY,EAAEsD,OAAOF,MAAM,EAC5CG,YAAahE,EAAOJ,WAErBI,EAAOJ,WAAY2C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAAEzC,EAAOJ,eAEhE8C,EAAAA,EAAAA,MAACG,EAAAA,GAAI,CAAAJ,SAAA,EACHF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACmB,GAAI,EAAExB,UACVF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CAACC,MAAM,UAAU3B,UAAU,OAAOkB,KAAK,SAAQjB,SAAC,aAI1DF,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACmB,GAAI,EAAGzB,UAAU,aAAYC,UACjCF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAO,CAACC,MAAM,OAAO3B,UAAU,OAAMC,SAAC,kCAQjDF,EAAAA,EAAAA,KAACU,EAAAA,GAAK,CAACT,UAAU,uCAAuC4B,MAAO,CAAEC,MAAO,OAAQ5B,UAC9EF,EAAAA,EAAAA,KAACW,EAAAA,GAAS,CAACV,UAAU,cAAaC,UAChCF,EAAAA,EAAAA,KAAA,yBASlB,C","sources":["../node_modules/@coreui/icons/src/free/cil-user.ts","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","views/pages/login/Login.js"],"sourcesContent":["export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport { useAuth } from './AuthContext'\nimport { toast, ToastContainer } from 'react-toastify'\nimport { useNavigate } from 'react-router-dom'\nimport { ROLE_LIST } from '../../../constants/constants'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst Login = () => {\n  const { login } = useAuth()\n  const navigate = useNavigate()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState({})\n\n  const validate = () => {\n    let errors = {}\n    if (!email) {\n      errors.email = 'Email is required'\n    }\n    if (!password) {\n      errors.password = 'Password is required'\n    }\n    return errors\n  }\n\n  const onFinish = async (e) => {\n    e.preventDefault()\n    const errors = validate()\n    if (Object.keys(errors).length > 0) {\n      setErrors(errors)\n      toast.error('Please fill in all fields correctly')\n      return\n    }\n\n    try {\n      const response = await login({ email, password })\n      console.log(response)\n      if (response.status === 200) {\n        let token = response.data.data.Token\n        if (token === '') {\n          navigate('/')\n        } else {\n          let role = response.data.data?.role || ''\n\n          const rolen = role.replace(/[^A-Za-z]/g, '')\n          if (rolen === ROLE_LIST.CLUSTERS) {\n            navigate('/sales-hierarchy')\n          } else if (role === ROLE_LIST.CDMO) {\n            navigate('/sales-hierarchy')\n          } else {\n            navigate('/')\n          }\n        }\n        setEmail('')\n        setPassword('')\n      } else {\n        toast.error('Invalid credential')\n      }\n    } catch (error) {\n      toast.error('Invalid credential', error)\n      console.error(error)\n    }\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <ToastContainer />\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={onFinish}>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"email\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        isInvalid={!!errors.email}\n                      />\n                      {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        isInvalid={!!errors.password}\n                      />\n                      {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" className=\"px-4\" type=\"submit\">\n                          Login\n                        </CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          Forgot password?\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 signup-bg\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div></div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["cilUser","cilLockLocked","login","useAuth","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","errors","setErrors","validate","onFinish","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","response","_response$data$data","role","wrap","_context","prev","next","preventDefault","Object","keys","length","toast","error","abrupt","sent","console","log","status","data","Token","replace","ROLE_LIST","CLUSTERS","CDMO","t0","stop","_x","apply","arguments","_jsx","className","children","_jsxs","CContainer","ToastContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","onSubmit","CInputGroup","CInputGroupText","CIcon","icon","CFormInput","type","placeholder","autoComplete","value","onChange","target","isInvalid","xs","CButton","color","style","width"],"sourceRoot":""}